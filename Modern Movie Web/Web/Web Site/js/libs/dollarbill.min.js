/*!
 * dollarbill v0.0.5 (https://github.com/docluv/dollarbill)
 * Copyright 2013-2014 Chris Love
 * Licensed under Apache (https://github.com/docluv/dollarbill/LICENSE)
 */
function CustomEvent(a, b) { b = b || { bubbles: !1, cancelable: !1, detail: void 0 }; var c = document.createEvent("CustomEvent"); return c.initCustomEvent(a, b.bubbles, b.cancelable, b.detail), c } !function (a, b) { "use strict"; var c = function (a, b) { var d, e, f = new c.fn.init(a, b); if (!a) return f.length = 0, f; if ("string" == typeof a) for (d = b && b.nodeType?b.querySelectorAll(a):document.querySelectorAll(a), f.length = d.length, f.selector = a, e = 0; e < d.length; e++) f[e] = d[e]; else a.nodeType && (f[0] = a, f.length = a.length?a.length:1); return f }; return c.fn = c.prototype = { constructor: c, init: function () { return this }, version: "0.0.5", length: 0, context: b, selector: "", rclass: /[\t\r\n]/g }, c.trim = function (a) { return null == a?"":a.trim(a) }, c.isArray = function (a) { return "[object Array]" === Object.prototype.toString.call(a) }, c.isPlainObject = function (a) { return "object" != typeof a || a.nodeType || a === a.window?!1:a.constructor && !Object.prototype.hasOwnProperty.call(a.constructor.prototype, "isPrototypeOf")?!1:!0 }, c.merge = function () { }, c.each = function (a, c) { if (c === b && (c = a, a = this), this.isArray(a)) for (var d = 0, e = a.length; e > d; d++)        ; }, c.map = function (a, b) { var c, d = 0, e = a.length, f = this.isArray(a), g = []; if (f) for (; e > d; d++) c = b(a[d], d, arg), null != c && (g[g.length] = c); else for (d in a) c = b(a[d], d, arg), null != c && (g[g.length] = c); return g }, c.grep = function (a, b, c) { var d, e = [], f = 0, g = a.length; for (c = !!c; g > f; f++) d = !!b(a[f], f), c !== d && e.push(a[f]); return e }, c.noop = function () { }, c.fn.init.prototype = c.fn, a.dollarbill = a.$ = c }(window), dollarbill.parseLocalStorage = function (a) { var b = localStorage.getItem(a); return b?JSON.parse(b) || {}:{} }, dollarbill.fn.removeClass = function (a) { if (a && "string" == typeof a) { for (var b = 0; b < this.length; b++) for (var c = a.split(" "), d = 0; d < c.length; d++) "" !== c[d] && this[b].classList.remove(c[d]); return this } }, dollarbill.fn.addClass = function (a) { if (a && "string" == typeof a) { for (var b = 0; b < this.length; b++) for (var c = a.split(" "), d = 0; d < c.length; d++) "" !== c[d] && this[b].classList.add(c[d]); return this } }, dollarbill.fn.hasClass = function (a) { return a && "string" == typeof a?this[0].classList.contains(a):this }, dollarbill.fn.toggleClass = function (a) { if (a && "string" == typeof a) { for (var b = 0; b < this.length; b++) this[b].classList.toggle(a); return this } }, dollarbill.fn.show = function (a) { a = a || "block"; for (var b = 0; b < this.length; b++) this[b].style.display = a }, dollarbill.fn.hide = function () { for (var a = 0; a < this.length; a++) this[a].style.display = "none" }, dollarbill.fn.toggle = function (a) { a = a || "block"; for (var b = 0; b < this.length; b++) { var c = this[b]; c.style.display = "" === c.style.display || "none" === c.style.display?a:"none" } }, dollarbill.getVendorPropertyName = function (a) { var b, c, d = ["Moz","Webkit","O","ms"], e = document.createElement("div"), f = a.charAt(0).toUpperCase() + a.substr(1); if (a in e.style) return a; for (c = 0; c < d.length; ++c) if (b = d[c] + f, b in e.style) return b }, dollarbill.hideURLBar = function () { var a = window, b = document, c = b.body, d = document.height > a.innerHeight?document.height:a.innerHeight, e = a.pageYOffset || "CSS1Compat" === b.compatMode && b.documentElement.scrollTop || b.body.scrollTop || 0; 430 > d && (d = 430), d > c.clientHeight && (c.style.height = d + "px"), window.addEventListener("load", function () { setTimeout(function () { window.scrollTo(0, e) }, 0) }) }, dollarbill.transitionend = { animation: "animationend", webkitAnimation: "webkitAnimationEnd", MozAnimation: "animationend", OAnimation: "oAnimationEnd" }, dollarbill.checkTransform3dSupport = function () { var a = document.createElement("div"), b = this.getVendorPropertyName("transform"); return a.style[b] = "", a.style[b] = "rotateY(90deg)", "" !== a.style[b] }, dollarbill.buildVendorNames = function () { return { transition: this.getVendorPropertyName("transition"), transitionDelay: this.getVendorPropertyName("transitionDelay"), transform: this.getVendorPropertyName("transform"), transformOrigin: this.getVendorPropertyName("transformOrigin"), transform3d: this.checkTransform3dSupport() } }, dollarbill.s4 = function () { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1) }, dollarbill.guid = function () { return this.s4() + this.s4() + "-" + this.s4() + "-" + this.s4() + "-" + this.s4() + "-" + this.s4() + this.s4() + this.s4() }, dollarbill.extend = function () { var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1; for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" != typeof g && "function" != typeof g && (g = {}), h === i && (g = this, h--); i > h; h++) if (null != (a = arguments[h])) for (b in a) c = g[b], d = a[b], g !== d && (j && d && (dollarbill.isPlainObject(d) || (e = dollarbill.isArray(d)))?(e?(e = !1, f = c && dollarbill.isArray(c)?c:[]):f = c && dollarbill.isPlainObject(c)?c:{}, g[b] = dollarbill.extend(j, f, d)):void 0 !== d && (g[b] = d)); return g }, dollarbill.fn.css = function (a, b) { if (0 === this.length) return void 0; for (var c, d, e = 0; e < this.length; e++) { if (c = this[e], "string" == typeof a && !b) return c.style[a]; if ("string" == typeof a && b && (c.style[a] = b), "object" == typeof a) for (d in a) c.style[d] = a[d] } return this }, dollarbill.fn.height = function (a) { return a?(this.length > 0 && (this[0].style.height = a), this):0 === this.length?window.style.height:this[0].style.height }, dollarbill.fn.width = function (a) { return a?(this.length > 0 && (this[0].style.clientWidth = a), this):0 === this.length?window.style.clientWidth:this[0].style.clientWidth }, dollarbill.fn.innerHeight = function () { return 0 === this.length?window.innerHeight:this[0].innerHeight }, dollarbill.fn.innerWidth = function () { return 0 === this.length?window.innerWidth:this[0].offsetWidth }, dollarbill.fn.offset = function () { if (0 !== this.length) { var a = this[0].getBoundingClientRect(); return { top: a.top + window.pageYOffset, left: a.left + window.pageXOffset } } }, dollarbill.fn.outerHeight = function () { return 0 === this.length?window.outerHeight:this[0].getBoundingClientRect().height }, dollarbill.fn.outerWidth = function () { return 0 === this.length?window.outerWidth:this[0].getBoundingClientRect().width }, dollarbill.fn.position = function () { return this[0]?this[0].getBoundingClientRect():void 0 }, dollarbill.fn.attr = function (a, b) { if (!a) return this; if (!b) return this[0].getAttribute(a); for (var c = 0; c < this.length; c++) this[c].setAttribute(a, b); return this }, dollarbill.fn.html = function (a) { if (!this[0]) return this; var b = 0; if (void 0 === a) return this[0].innerHTML; for (; b < this.length; b++) this[b].innerHTML = a; return this }, dollarbill.fn.removeAttr = function (a) { if (!this[0]) return this; for (var b = 0; b < this.length; b++) this[b].removeAttribute(a); return this }, dollarbill.fn.data = function (a, b) { var c = this[i]; return b?void c.setAttribute("data-" + a, b):c.hasAttribute("data-" + a)?c.getAttribute("data-" + a):"" }, window.CustomEvent || (CustomEvent.prototype = window.CustomEvent.prototype, window.CustomEvent = CustomEvent), dollarbill.fn.on = function (a, b, c) { c = c === !0?!0:!1; for (var d = 0; d < this.length; d++) this[d].addEventListener(a, b, c) }, dollarbill.fn.off = function (a, b, c) { for (var d = 0; d < this.length; d++) this[d].removeEventListener(a, b, c) }, dollarbill.fn.trigger = function (a, b) { if (!a) return this; for (var c = 0, d = new CustomEvent(a, b); c < this.length; c++) elem.dispatchEvent(d) }, dollarbill.fn.after = function (a) { if (!a) return this; "string" == typeof a && (a = document.createDocumentFragment(a)); for (var b = 0; b < this.length; b++) this[b].parentNode && this[b].parentNode.insertBefore(a, this[b].nextSibling); return this }, dollarbill.fn.append = function (a) { if (!a) return this; a.nodeType || "string" != typeof a || (a = document.createElement(a)); for (var b = 0; len > b; b++) this[b].appendChild(a); return this }, dollarbill.fn.appendTo = function (a) { if (!a) return this; "string" == typeof a && (a = document.querySelectorAll(a)), a.length || (a = [a]); for (var b = 0, c = 0; b < a.length; b++) for (; c < this.length; c++) a[b].appendChild(this[c]) }, dollarbill.fn.before = function (a) { if (!a) return this; "string" == typeof a && (a = document.createDocumentFragment(a)); for (var b = 0; b < this.length; b++) this[0].parentNode.insertBefore(a, this[0]); return this }, dollarbill.fn.clone = function (a) { return 0 !== this.length?this[0].cloneNode(a):void 0 }, dollarbill.fn.detach = function (a) { return this.remove(a) }, dollarbill.fn.empty = function () { for (var a = 0; a < this.length; a++) this[a].innerHTML = null; return this }, dollarbill.fn.insertAfter = function (a) { return a.parentNode.insertBefore(this, a.nextSibling), this }, dollarbill.fn.insertBefore = function (a, b) { b || (b = this[0]), a.length || (a = [a]); for (var c = 0; c < a.length; c++) a[c].parentNode.insertBefore(a[c], b); return this }, dollarbill.fn.prepend = function (a) { if (!a) return this; "string" == typeof a && (a = document.createDocumentFragment(a)); for (var b, c = 0; c < this.length; c++) b = this[0], (1 === b.nodeType || 11 === b.nodeType || 9 === b.nodeType) && b.insertBefore(a, b.firstChild); return this }, dollarbill.fn.prependTo = function (a) { if (!a) return this; "string" == typeof a && (a = document.querySelectorAll(c)), a.length || (a = [a]); for (var b = 0, c = this[0]; b < a.length; b++) (1 === a.nodeType || 11 === a.nodeType || 9 === a.nodeType) && a.insertBefore(c, a.firstChild); return this }, dollarbill.fn.remove = function () { var a, b, c; for (a = 0; a < this.length; a++) b = this[a], c = b.parentNode.removeChild(b), c = null; return this }, dollarbill.fn.replaceAll = function (a) { if (0 === this.length || !a) return this; "string" == typeof a && (a = document.querySelectorAll(a)); for (var b = 0, c = 0; b < a.length; b++) for (; c < this.length; c++) this[b].parentNode.replaceChild(this[b], a); return this }, dollarbill.fn.replaceWith = function (a) { if (!a) return this; a.nodeType || "string" != typeof a || (a = document.createElement(a)); for (var b = 0; len > b; b++) this[b].parentNode.replaceChild(a, this[b]); return this }, dollarbill.fn.text = function (a) { 0 === this.length; var b = this[0], c = b.nodeType; if (a) 1 === c || 9 === c || 11 === c?b.textContent = a:(3 === c || 4 === c) && (b.nodeValue = a); else { if (1 === c || 9 === c || 11 === c) return b.textContent; if (3 === c || 4 === c) return b.nodeValue } return "" }, dollarbill.fn.parent = function (a) { return a.length || (a = [a]), a[0].parentNode }, dollarbill.fn.prev = function () { return c.length || (c = [c]), c[0].previousElementSibling }, dollarbill.fn.next = function () { return c.length || (c = [c]), c[0].nextElementSibling }, dollarbill.fn.loadScript = function (a, b, c) { if (document.getElementById(a)) c(); else { var d = document.createElement("script"); d.type = "text/javascript", d.id = a, d.readyState?d.onreadystatechange = function () { ("loaded" === d.readyState || "complete" === d.readyState) && (d.onreadystatechange = null, c()) }:d.onload = function () { c() }, d.src = b, document.body.appendChild(d) } };